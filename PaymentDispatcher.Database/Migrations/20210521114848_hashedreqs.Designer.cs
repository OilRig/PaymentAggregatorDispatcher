// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaymentDispatcher.Database.Context;

namespace PaymentDispatcher.Database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210521114848_hashedreqs")]
    partial class hashedreqs
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PaymentDispatcher.Database.Entities.AggregatorTokenMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AggregatorAddress")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("AggregatorToken")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("AggregatorAddress", "AggregatorToken")
                        .IsUnique()
                        .HasFilter("[AggregatorAddress] IS NOT NULL AND [AggregatorToken] IS NOT NULL");

                    b.ToTable("AggregatorTokenMaps");
                });

            modelBuilder.Entity("PaymentDispatcher.Database.Entities.DispatcherDBRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DataJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Intent")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<short>("Method")
                        .HasColumnType("smallint");

                    b.Property<int>("NumericRequestKey")
                        .HasColumnType("int");

                    b.Property<string>("RequestSecretCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniqueAggregatorToken")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("UniqueRequestToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DispatcherDBRequests");
                });

            modelBuilder.Entity("PaymentDispatcher.Database.Entities.HashedPaymentRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AggregatorToken")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long>("RequestId")
                        .HasColumnType("bigint");

                    b.Property<string>("RequestSecretCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RequestId")
                        .IsUnique();

                    b.ToTable("HashedPaymentRequests");
                });

            modelBuilder.Entity("PaymentDispatcher.Database.Entities.HashedPaymentRequest", b =>
                {
                    b.HasOne("PaymentDispatcher.Database.Entities.DispatcherDBRequest", "Request")
                        .WithOne("HashedRequest")
                        .HasForeignKey("PaymentDispatcher.Database.Entities.HashedPaymentRequest", "RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Request");
                });

            modelBuilder.Entity("PaymentDispatcher.Database.Entities.DispatcherDBRequest", b =>
                {
                    b.Navigation("HashedRequest");
                });
#pragma warning restore 612, 618
        }
    }
}
